{"mappings":"ICEkB,EACV,E,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,G,E,I,A,W,M,A,U,wI,G,CADU,EA2BT,cA1BD,EAAgB,SAAS,aAAa,CAAC,MAUtC,AAPe,EAFJ,SAAS,gBAAgB,CAAC,IAAS,MAAA,CAAL,EAAK,OAEhB,IAAI,CAAC,SAAC,CAAA,CAAO,CAAlD,EACE,IAAM,EAAK,CAAE,EAAM,YAAY,CAAC,GAAM,OAAO,CAAC,KAAM,KAAK,KAAK,CAAC,GAG/D,MAAO,AAFI,CAAE,EAAM,YAAY,CAAC,GAAM,OAAO,CAAC,KAAM,KAAK,KAAK,CAAC,GAEnD,CACd,GAEqB,GAAG,CAAC,SAAC,CAA1B,EAAuC,OAAA,EAAc,WAAW,CAAC,E,GAMzD,EAFU,SAAS,gBAAgB,CAAE,GAAO,MAAA,CAaxC,QAXU,GAAG,CAAC,SAAC,CAA3B,EACE,MAAO,CACL,KAAM,EAAI,WAAW,CAAC,IAAI,GAC1B,SAAU,EAAI,OAAO,CAAC,QAAQ,CAAC,IAAI,GACnC,OAAQ,CAAE,EAAI,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,KAAM,KAAK,KAAK,CAAC,GACtD,IAAK,CAAC,EAAI,OAAO,CAAC,GAAG,AACvB,CACF,E,4D","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nfunction sortList(list) {\n    var listEmployees = document.querySelector(\"ul\");\n    var employees = document.querySelectorAll(\"[\".concat(list, \"]\"));\n    var sortEmployees = _to_consumable_array(employees).sort(function(empl1, empl2) {\n        var e1 = +empl1.getAttribute(list).replace(/,/g, \".\").slice(1);\n        var e2 = +empl2.getAttribute(list).replace(/,/g, \".\").slice(1);\n        return e2 - e1;\n    });\n    return sortEmployees.map(function(employee) {\n        return listEmployees.appendChild(employee);\n    });\n}\nfunction employeesList(list) {\n    var employees = document.querySelectorAll(\"\".concat(list));\n    return _to_consumable_array(employees).map(function(emp) {\n        return {\n            name: emp.textContent.trim(),\n            position: emp.dataset.position.trim(),\n            salary: +emp.dataset.salary.replace(/,/g, \".\").slice(1),\n            age: +emp.dataset.age\n        };\n    });\n}\nsortList(\"data-salary\");\nemployeesList(\"li\");\n\n//# sourceMappingURL=index.9c0f6be2.js.map\n","'use strict';\n\nfunction sortList(list) {\n  const listEmployees = document.querySelector('ul');\n  const employees = document.querySelectorAll(`[${list}]`);\n\n  const sortEmployees = [...employees].sort((empl1, empl2) => {\n    const e1 = +(empl1.getAttribute(list).replace(/,/g, '.').slice(1));\n    const e2 = +(empl2.getAttribute(list).replace(/,/g, '.').slice(1));\n\n    return e2 - e1;\n  });\n\n  return sortEmployees.map((employee) => listEmployees.appendChild(employee));\n}\n\nfunction employeesList(list) {\n  const employees = document.querySelectorAll(`${list}`);\n\n  return [...employees].map((emp) => {\n    return {\n      name: emp.textContent.trim(),\n      position: emp.dataset.position.trim(),\n      salary: +(emp.dataset.salary.replace(/,/g, '.').slice(1)),\n      age: +emp.dataset.age,\n    };\n  });\n}\n\nsortList('data-salary');\nemployeesList('li');\n"],"names":["list","listEmployees","_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","document","querySelector","sortEmployees","querySelectorAll","concat","sort","empl1","empl2","e1","getAttribute","replace","e2","map","employee","appendChild","emp","textContent","trim","position","dataset","salary","age"],"version":3,"file":"index.9c0f6be2.js.map"}